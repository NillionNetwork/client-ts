// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file nillion/values/v1/store.proto (package nillion.values.v1.store, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { SignedReceipt } from "../../payments/v1/receipt_pb";
import { file_nillion_payments_v1_receipt } from "../../payments/v1/receipt_pb";
import type { Permissions } from "../../permissions/v1/permissions_pb";
import { file_nillion_permissions_v1_permissions } from "../../permissions/v1/permissions_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file nillion/values/v1/store.proto.
 */
export const file_nillion_values_v1_store: GenFile = /*@__PURE__*/
  fileDesc("Ch1uaWxsaW9uL3ZhbHVlcy92MS9zdG9yZS5wcm90bxIXbmlsbGlvbi52YWx1ZXMudjEuc3RvcmUi0QEKElN0b3JlVmFsdWVzUmVxdWVzdBJCCg5zaWduZWRfcmVjZWlwdBgBIAEoCzIqLm5pbGxpb24ucGF5bWVudHMudjEucmVjZWlwdC5TaWduZWRSZWNlaXB0EhYKDmJpbmNvZGVfdmFsdWVzGAIgASgMEkQKC3Blcm1pc3Npb25zGAMgASgLMi8ubmlsbGlvbi5wZXJtaXNzaW9ucy52MS5wZXJtaXNzaW9ucy5QZXJtaXNzaW9ucxIZChF1cGRhdGVfaWRlbnRpZmllchgEIAEoDCIoChNTdG9yZVZhbHVlc1Jlc3BvbnNlEhEKCXZhbHVlc19pZBgBIAEoDEKpAQobY29tLm5pbGxpb24udmFsdWVzLnYxLnN0b3JlQgpTdG9yZVByb3RvUAGiAgROVlZTqgIXTmlsbGlvbi5WYWx1ZXMuVjEuU3RvcmXKAhdOaWxsaW9uXFZhbHVlc1xWMVxTdG9yZeICI05pbGxpb25cVmFsdWVzXFYxXFN0b3JlXEdQQk1ldGFkYXRh6gIaTmlsbGlvbjo6VmFsdWVzOjpWMTo6U3RvcmViBnByb3RvMw", [file_nillion_payments_v1_receipt, file_nillion_permissions_v1_permissions]);

/**
 * A request to store a set of values.
 *
 * @generated from message nillion.values.v1.store.StoreValuesRequest
 */
export type StoreValuesRequest = Message<"nillion.values.v1.store.StoreValuesRequest"> & {
  /**
   * The receipt that proves this operation was paid for.
   *
   * The receipt must be for a `StoreValues` operation.
   *
   * @generated from field: nillion.payments.v1.receipt.SignedReceipt signed_receipt = 1;
   */
  signedReceipt?: SignedReceipt;

  /**
   * The values encoded in bincode format.
   *
   * @generated from field: bytes bincode_values = 2;
   */
  bincodeValues: Uint8Array;

  /**
   * The permissions to set for these values.
   *
   * Permissions are required when storing values and optional when updating them. That is,
   * if `update_identifier` is set then this attribute is optional.
   *
   * @generated from field: nillion.permissions.v1.permissions.Permissions permissions = 3;
   */
  permissions?: Permissions;

  /**
   * The optional values identifier to use when storing these values.
   *
   * The given identifier must be a valid values identifier that the invoking user has update permissions
   * on for this operation to be considered valid.
   *
   * Setting this identifier will effectively turn this operation into an update for an existing set of
   * values. 
   *
   * @generated from field: bytes update_identifier = 4;
   */
  updateIdentifier: Uint8Array;
};

/**
 * Describes the message nillion.values.v1.store.StoreValuesRequest.
 * Use `create(StoreValuesRequestSchema)` to create a new message.
 */
export const StoreValuesRequestSchema: GenMessage<StoreValuesRequest> = /*@__PURE__*/
  messageDesc(file_nillion_values_v1_store, 0);

/**
 * A response to a request to store values the network.
 *
 * @generated from message nillion.values.v1.store.StoreValuesResponse
 */
export type StoreValuesResponse = Message<"nillion.values.v1.store.StoreValuesResponse"> & {
  /**
   * The identifier of the store values.
   *
   * @generated from field: bytes values_id = 1;
   */
  valuesId: Uint8Array;
};

/**
 * Describes the message nillion.values.v1.store.StoreValuesResponse.
 * Use `create(StoreValuesResponseSchema)` to create a new message.
 */
export const StoreValuesResponseSchema: GenMessage<StoreValuesResponse> = /*@__PURE__*/
  messageDesc(file_nillion_values_v1_store, 1);

